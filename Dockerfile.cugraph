ARG PY_VERSION_DEFAULT=3.8

FROM rapidsai/rapidsai-dev:22.02-cuda11.5-devel-ubuntu20.04-py3.8 as base

USER root

ARG MG_VERSION=2.2.1
ARG PY_VERSION_DEFAULT
ENV MG_VERSION ${MG_VERSION}
ENV PY_VERSION ${PY_VERSION_DEFAULT}
ENV LD_LIBRARY_PATH=/usr/local/nvidia/lib:/usr/local/nvidia/lib64:/usr/local/cuda/lib64:/usr/local/lib

RUN apt update && \
    apt install -y software-properties-common lsb-release wget && \
    apt clean all

RUN wget -qO - https://apt.kitware.com/keys/kitware-archive-latest.asc | apt-key add -
RUN apt-add-repository "deb https://apt.kitware.com/ubuntu/ $(lsb_release -cs) main"

#essentials for production/dev
RUN apt-get update && apt-get install -y \
    libcurl4        `memgraph` \
    libpython${PY_VERSION}   `memgraph` \
    libssl1.1       `memgraph` \
    libssl-dev       `memgraph` \
    openssl         `memgraph` \
    build-essential `mage-memgraph` \
    cmake           `mage-memgraph` \
    curl            `mage-memgraph` \
    g++             `mage-memgraph` \
    python3         `mage-memgraph` \
    python3-pip     `mage-memgraph` \
    python3-setuptools     `mage-memgraph` \
    python3-dev     `mage-memgraph` \
    uuid-dev        `mage-memgraph` \
    clang           `mage-memgraph` \
    git             `mage-memgraph` \
    --no-install-recommends \
    # Download and install Memgraph
    && curl https://download.memgraph.com/memgraph/v${MG_VERSION}/ubuntu-20.04/memgraph_${MG_VERSION}-1_amd64.deb --output memgraph.deb \
    && dpkg -i memgraph.deb \
    && rm memgraph.deb \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/bin/cmake:/usr/lib/cmake
RUN whereis cmake
RUN which cmake
RUN cmake --version

# Memgraph listens for Bolt Protocol on this port by default.
EXPOSE 7687

FROM base as dev

WORKDIR /mage
COPY . /mage

#MAGE
RUN ls /rapids/cugraph/cpp/include/cugraph
RUN python3 /mage/setup build -p /usr/lib/memgraph/query_modules/

RUN ls /usr/lib/memgraph/query_modules/

USER memgraph
ENTRYPOINT ["/usr/lib/memgraph/memgraph"]
CMD [""]

FROM base as prod

USER root
ENTRYPOINT []
ARG PY_VERSION_DEFAULT
ENV PY_VERSION ${PY_VERSION_DEFAULT}

#copy modules
COPY --from=dev /usr/lib/memgraph/query_modules/ /usr/lib/memgraph/query_modules/

#copy python build
COPY --from=dev /usr/local/lib/python${PY_VERSION}/ /usr/local/lib/python${PY_VERSION}/

RUN rm -rf /mage \
    && export PATH="/usr/local/lib/python${PY_VERSION}:${PATH}" \
    && apt-get -y --purge autoremove clang git curl python3-pip python3-dev cmake build-essential \
    && apt-get clean

USER memgraph
ENTRYPOINT ["/usr/lib/memgraph/memgraph"]
CMD [""]
